// COPYRIGHT Dassault Systemes 2011
//===================================================================
//
// MBDTechnicInfoCmd.h
// The state chart based command: MBDTechnicInfoCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Apr 2011  Creation: Code generated by the CAA wizard  ev5adm
//===================================================================
#ifndef MBDTechnicInfoCmd_H
#define MBDTechnicInfoCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "MBDTechnicInfoDlg.h"
#include "MBDTechnicInfoSearchDlg.h"
#include "MBDTechnicInfoNewAddinDlg.h"

#include "CATListOfCATUnicodeString.h"
#include "CATLISTV_CATISpecObject.h"
#include "CATDocument.h"
#include "CATFrmEditor.h"
#include "CATHSO.h"
#include "TreeNodeSelectNotif.h"
#include "MBDNoteModifyDlg.h"


//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class MBDTechnicInfoCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( MBDTechnicInfoCmd, CATStateCommand )

  public:

  MBDTechnicInfoCmd();
  virtual ~MBDTechnicInfoCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

  // 主对话框界面响应控制
  void OkDlgTechnicInfo(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void CloseDlgTechnicInfo(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void ShowDlgTechnicNoteSearch(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void ShowDlgNewNoteAddin(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  // 搜索对话框界面响应控制
  void OkDlgTechnicNoteSearch(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void CloseDlgTechnicNoteSearch(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  // 新申请对话框界面响应控制
  void OkDlgNewNoteAddin(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void CloseDlgNewNoteAddin(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  // 当用户点击按钮后，有关参数的初始化工作
  HRESULT GetInitialInfo();
  HRESULT ShowTreeNode();

  // 点击查看搜索结果信息的详情
  void SearchResultMLSelectedCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  CATBoolean OnResultMBDNoteModifyCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void OnMBDResultModifyOKAction(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void OnMBDResultModifyCancelAction(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  // CATIA结构树树节点响应
  void OnTreeNodeSelect(CATCallbackEvent event, void * client, CATNotification * iNotification, CATSubscriberData data, CATCallback callback);

  // 点击技术附注信息右键响应
  CATBoolean MBDNoteMLSelectedCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  CATBoolean OnMBDNoteModifyCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  CATBoolean OnMBDNoteDeleteCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
 
  //context DLG响应
  void OnMBDModifyOKAction(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);
  void OnMBDModifyCancelAction(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  //实现对技术附注项的排序功能
  void SortMBDNotesInOrder(CATListValCATUnicodeString &listStrName,CATListValCATUnicodeString &listStrValue);

  //插入新数据到CATIA GSMTOOL
  void InsertTechItemPushButtonCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  //获取当前所有的FLAGNOTE
  void GetAllFlagNoteInPrt(CATDocument * ipDoc);

  //发送新数据到数据库
  void ApplyNoteToDatabasePBCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  private:

	 CATFrmEditor	* m_piEditor;
	 CATHSO		* m_piHSO;

	 MBDTechnicInfoDlg * m_piDlg;
	 MBDTechnicInfoSearchDlg *m_piSearchDlg;
	 MBDTechnicInfoNewAddinDlg *m_piNewAddinDlg;

	 //XML文件路径
	 CATUnicodeString m_strXMLpath;

	 //CATIA结构树节点信息
	 CATLISTV(CATUnicodeString) m_ListTreeNodeName;
	 CATListValCATISpecObject_var m_listTreeNodeSpec;

	 //每个查询库对应的GSMTOOL名称
	 CATLISTV(CATUnicodeString) m_ListSearchGSMTOOLName;

	 //search 开关
	 CATLISTV(CATUnicodeString) m_ListSearchGSMToolSwitch;
	 
	 //每个添加库对应的GSMTOOL名称，以及是否插入开关
	 CATLISTV(CATUnicodeString) m_ListAddinGSMTOOLName;
	 int m_selectResultLine;

	 CATLISTV(CATISpecObject_var) m_listARMInstancePrd;

	 //当前文档信息名称：装配或者零件
	 CATUnicodeString m_strCurrentDocName,m_strCurrentDocType;
	 CATDocument* m_piCurrentDoc;

	 //存储检索信息
	 CATLISTV(CATUnicodeString) m_listStrSearchItemsValue;

	 //检索结果拆分信息
	 CATLISTV(CATUnicodeString) m_strListOfSearchResult01,m_strListOfSearchResult02,m_strListOfSearchResult03;

	 //当前选中几何图形集
	 CATISpecObject_var m_spSpecGSMTool;

	 //修改技术注释对话框
	 MBDNoteModifyDlg  *m_piNoteModifyDlg;

	 //右键context按钮对话框
	 CATDlgContextualMenu  *m_pContextMenu;
	 CATDlgPushItem * m_pPushItemModify,* m_pPushItemDelete;

	 //记载MBDNote选中的编号
	 CATBoolean m_MBDNoteSelectedFlag;
	 int m_MBDNoteSelectNum;

	 //修改技术注释对话框
	 MBDNoteModifyDlg  *m_piResultNoteModifyDlg;

	 //RESULT右键按钮对话框
	 CATDlgContextualMenu  *m_pResultContextMenu;
	 CATDlgPushItem * m_pResultPushItemModify;

	 //记载MBDRESULT选中的编号

	 //当前几何图形集下来存在的 附注信息项
	 CATListValCATUnicodeString  m_ListStrName,m_ListStrNameValue;

};

//----------------------------------------------------------------------

#endif
