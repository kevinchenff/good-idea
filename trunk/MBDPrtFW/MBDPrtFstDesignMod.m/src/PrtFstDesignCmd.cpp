// COPYRIGHT Dassault Systemes 2011
//===================================================================
//
// PrtFstDesignCmd.cpp
// The state chart based command: PrtFstDesignCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Nov 2011  Creation: Code generated by the CAA wizard  xyuser
//===================================================================
#include "PrtFstDesignCmd.h"
#include "CATIndicationAgent.h"
#include "CATMathPlane.h"

#include "CATCreateExternalObject.h"
CATCreateClass( PrtFstDesignCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
PrtFstDesignCmd::PrtFstDesignCmd() :
  CATStateCommand ("PrtFstDesignCmd", CATDlgEngOneShot, CATCommandModeShared) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
  ,m_piDlg(NULL)
{
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
PrtFstDesignCmd::~PrtFstDesignCmd()
{
	if (m_piDlg != NULL)
	{
		m_piDlg->RequestDelayedDestruction();
		m_piDlg = NULL;
	}
   
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void PrtFstDesignCmd::BuildGraph()
{
	m_piDlg = new PrtFstDesignDlg();
	m_piDlg->Build();
	m_piDlg->SetVisibility(CATDlgShow); 


	// 主对话框的消息响应
	AddAnalyseNotificationCB (m_piDlg, 
		m_piDlg->GetDiaOKNotification(),
		(CATCommandMethod)&PrtFstDesignCmd::OkDlgCB,
		NULL);

	AddAnalyseNotificationCB (m_piDlg, 
		m_piDlg->GetWindCloseNotification(),
		(CATCommandMethod)&PrtFstDesignCmd::CloseDlgCB,
		NULL);

	AddAnalyseNotificationCB (m_piDlg, 
		m_piDlg->GetDiaCANCELNotification(),
		(CATCommandMethod)&PrtFstDesignCmd::CloseDlgCB,
		NULL);
}


void PrtFstDesignCmd::OkDlgCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
	if (NULL != m_piDlg)
	{
		m_piDlg->RequestDelayedDestruction();
		m_piDlg = NULL;
	}	

	RequestDelayedDestruction();

}
void PrtFstDesignCmd::CloseDlgCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{

	if (NULL != m_piDlg)
	{
		m_piDlg->RequestDelayedDestruction();
		m_piDlg = NULL;
	}	

	RequestDelayedDestruction();
}