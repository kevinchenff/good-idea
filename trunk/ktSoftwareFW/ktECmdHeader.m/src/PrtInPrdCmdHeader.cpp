// COPYRIGHT Dassault Systemes 2011
//===================================================================
//
// PrtInPrdCmdHeader.cpp
// Header definition of PrtInPrdCmdHeader
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2011  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "PrtInPrdCmdHeader.h"
#include "CATFrmEditor.h"
 
CATImplementClass( PrtInPrdCmdHeader,
                   Implementation, 
                   CATCommandHeader,
                   CATNull );
 
//-----------------------------------------------------------------------------
// PrtInPrdCmdHeader : constructor
//-----------------------------------------------------------------------------
PrtInPrdCmdHeader::PrtInPrdCmdHeader(const CATString&  iHeaderID, 
									 const CATString&  iLoadName, 
									 const CATString&  iClassName, 
									 void*  iArgument):
CATCommandHeader(iHeaderID,		// Command header Id
				 iLoadName,		// Command lib name		
				 iClassName,    // Command class Name
				 iArgument)
{

	m_UIActivatedCallback=NULL;

	CATFrmEditor* piFrmEditer=CATFrmEditor::GetCurrentEditor();
	if(piFrmEditer==NULL)
		return ;

	m_UIActivatedCallback=AddCallback(CATFrmEditor::GetCurrentEditor(),					// publisher
									  CATFrmEditor::UIACTIVEOBJECT_CHANGECOMPLETED(),	// notification name
									 (CATSubscriberMethod)&PrtInPrdCmdHeader::UIActivatedCmd);
}

//-----------------------------------------------------------------------------
// PrtInPrdCmdHeader : destructor
//-----------------------------------------------------------------------------
PrtInPrdCmdHeader::~PrtInPrdCmdHeader()
{
	CATFrmEditor* piFrmEditer=CATFrmEditor::GetCurrentEditor();

	if(piFrmEditer!=NULL && m_UIActivatedCallback!=NULL)
	{
		RemoveCallback(piFrmEditer,m_UIActivatedCallback);
		m_UIActivatedCallback=NULL;
	}
}
 
//-----------------------------------------------------------------------------
// PrtInPrdCmdHeader : copy constructor
//-----------------------------------------------------------------------------
PrtInPrdCmdHeader::PrtInPrdCmdHeader(CATCommandHeader *iHeaderToCopy):
   CATCommandHeader(iHeaderToCopy)
{
}
 
CATCommandHeader * PrtInPrdCmdHeader::Clone() 
{
	return new PrtInPrdCmdHeader(this);
}

void PrtInPrdCmdHeader::UIActivatedCmd(CATCallbackEvent     iPublishedEvent,		
											   void              *  iPublishingObject, 
											   CATNotification   *  iPublishNotification,
											   CATSubscriberData    iUsefulData,
											   CATCallback          iCallbackId)
{
	if(PrdService::IsPathProductDocument()==TRUE)
	{
		BecomeAvailable();
	}
	else
	{
		BecomeUnavailable();
	}
}

 
