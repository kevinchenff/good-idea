/* soapH.h
   Generated by gSOAP 2.8.3 from MBDWebService.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#define soap_new_std__wstring(soap, n) soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL)


#define soap_delete_std__wstring(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__kt1__getInforByIpResponse
#define SOAP_TYPE__kt1__getInforByIpResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__kt1__getInforByIpResponse(struct soap*, const char*, int, const _kt1__getInforByIpResponse *, const char*);
SOAP_FMAC3 _kt1__getInforByIpResponse * SOAP_FMAC4 soap_in__kt1__getInforByIpResponse(struct soap*, const char*, _kt1__getInforByIpResponse *, const char*);

#ifndef soap_write__kt1__getInforByIpResponse
#define soap_write__kt1__getInforByIpResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:getInforByIpResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__kt1__getInforByIpResponse
#define soap_read__kt1__getInforByIpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__kt1__getInforByIpResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__getInforByIpResponse * SOAP_FMAC4 soap_get__kt1__getInforByIpResponse(struct soap*, _kt1__getInforByIpResponse *, const char*, const char*);

#define soap_new__kt1__getInforByIpResponse(soap, n) soap_instantiate__kt1__getInforByIpResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__kt1__getInforByIpResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _kt1__getInforByIpResponse * SOAP_FMAC2 soap_instantiate__kt1__getInforByIpResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__kt1__getInforByIpResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__kt1__getInforByIp
#define SOAP_TYPE__kt1__getInforByIp (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__kt1__getInforByIp(struct soap*, const char*, int, const _kt1__getInforByIp *, const char*);
SOAP_FMAC3 _kt1__getInforByIp * SOAP_FMAC4 soap_in__kt1__getInforByIp(struct soap*, const char*, _kt1__getInforByIp *, const char*);

#ifndef soap_write__kt1__getInforByIp
#define soap_write__kt1__getInforByIp(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:getInforByIp", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__kt1__getInforByIp
#define soap_read__kt1__getInforByIp(soap, data) ( soap_begin_recv(soap) || !soap_get__kt1__getInforByIp(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__getInforByIp * SOAP_FMAC4 soap_get__kt1__getInforByIp(struct soap*, _kt1__getInforByIp *, const char*, const char*);

#define soap_new__kt1__getInforByIp(soap, n) soap_instantiate__kt1__getInforByIp(soap, n, NULL, NULL, NULL)


#define soap_delete__kt1__getInforByIp(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _kt1__getInforByIp * SOAP_FMAC2 soap_instantiate__kt1__getInforByIp(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__kt1__getInforByIp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__kt1__QueryResponse
#define SOAP_TYPE__kt1__QueryResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__kt1__QueryResponse(struct soap*, const char*, int, const _kt1__QueryResponse *, const char*);
SOAP_FMAC3 _kt1__QueryResponse * SOAP_FMAC4 soap_in__kt1__QueryResponse(struct soap*, const char*, _kt1__QueryResponse *, const char*);

#ifndef soap_write__kt1__QueryResponse
#define soap_write__kt1__QueryResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:QueryResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__kt1__QueryResponse
#define soap_read__kt1__QueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__kt1__QueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__QueryResponse * SOAP_FMAC4 soap_get__kt1__QueryResponse(struct soap*, _kt1__QueryResponse *, const char*, const char*);

#define soap_new__kt1__QueryResponse(soap, n) soap_instantiate__kt1__QueryResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__kt1__QueryResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _kt1__QueryResponse * SOAP_FMAC2 soap_instantiate__kt1__QueryResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__kt1__QueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__kt1__Query
#define SOAP_TYPE__kt1__Query (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__kt1__Query(struct soap*, const char*, int, const _kt1__Query *, const char*);
SOAP_FMAC3 _kt1__Query * SOAP_FMAC4 soap_in__kt1__Query(struct soap*, const char*, _kt1__Query *, const char*);

#ifndef soap_write__kt1__Query
#define soap_write__kt1__Query(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:Query", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__kt1__Query
#define soap_read__kt1__Query(soap, data) ( soap_begin_recv(soap) || !soap_get__kt1__Query(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__Query * SOAP_FMAC4 soap_get__kt1__Query(struct soap*, _kt1__Query *, const char*, const char*);

#define soap_new__kt1__Query(soap, n) soap_instantiate__kt1__Query(soap, n, NULL, NULL, NULL)


#define soap_delete__kt1__Query(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _kt1__Query * SOAP_FMAC2 soap_instantiate__kt1__Query(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__kt1__Query(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__kt1__InsertResponse
#define SOAP_TYPE__kt1__InsertResponse (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__kt1__InsertResponse(struct soap*, const char*, int, const _kt1__InsertResponse *, const char*);
SOAP_FMAC3 _kt1__InsertResponse * SOAP_FMAC4 soap_in__kt1__InsertResponse(struct soap*, const char*, _kt1__InsertResponse *, const char*);

#ifndef soap_write__kt1__InsertResponse
#define soap_write__kt1__InsertResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:InsertResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__kt1__InsertResponse
#define soap_read__kt1__InsertResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__kt1__InsertResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__InsertResponse * SOAP_FMAC4 soap_get__kt1__InsertResponse(struct soap*, _kt1__InsertResponse *, const char*, const char*);

#define soap_new__kt1__InsertResponse(soap, n) soap_instantiate__kt1__InsertResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__kt1__InsertResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _kt1__InsertResponse * SOAP_FMAC2 soap_instantiate__kt1__InsertResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__kt1__InsertResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__kt1__Insert
#define SOAP_TYPE__kt1__Insert (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__kt1__Insert(struct soap*, const char*, int, const _kt1__Insert *, const char*);
SOAP_FMAC3 _kt1__Insert * SOAP_FMAC4 soap_in__kt1__Insert(struct soap*, const char*, _kt1__Insert *, const char*);

#ifndef soap_write__kt1__Insert
#define soap_write__kt1__Insert(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:Insert", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__kt1__Insert
#define soap_read__kt1__Insert(soap, data) ( soap_begin_recv(soap) || !soap_get__kt1__Insert(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__Insert * SOAP_FMAC4 soap_get__kt1__Insert(struct soap*, _kt1__Insert *, const char*, const char*);

#define soap_new__kt1__Insert(soap, n) soap_instantiate__kt1__Insert(soap, n, NULL, NULL, NULL)


#define soap_delete__kt1__Insert(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _kt1__Insert * SOAP_FMAC2 soap_instantiate__kt1__Insert(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__kt1__Insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_kt1__ArrayOfString
#define SOAP_TYPE_kt1__ArrayOfString (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_kt1__ArrayOfString(struct soap*, const char*, int, const kt1__ArrayOfString *, const char*);
SOAP_FMAC3 kt1__ArrayOfString * SOAP_FMAC4 soap_in_kt1__ArrayOfString(struct soap*, const char*, kt1__ArrayOfString *, const char*);

#ifndef soap_write_kt1__ArrayOfString
#define soap_write_kt1__ArrayOfString(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "kt1:ArrayOfString", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_kt1__ArrayOfString
#define soap_read_kt1__ArrayOfString(soap, data) ( soap_begin_recv(soap) || !soap_get_kt1__ArrayOfString(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 kt1__ArrayOfString * SOAP_FMAC4 soap_get_kt1__ArrayOfString(struct soap*, kt1__ArrayOfString *, const char*, const char*);

#define soap_new_kt1__ArrayOfString(soap, n) soap_instantiate_kt1__ArrayOfString(soap, n, NULL, NULL, NULL)


#define soap_delete_kt1__ArrayOfString(soap, p) soap_delete(soap, p)

SOAP_FMAC1 kt1__ArrayOfString * SOAP_FMAC2 soap_instantiate_kt1__ArrayOfString(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_kt1__ArrayOfString(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___kt1__getInforByIp
#define SOAP_TYPE___kt1__getInforByIp (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___kt1__getInforByIp(struct soap*, struct __kt1__getInforByIp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___kt1__getInforByIp(struct soap*, const struct __kt1__getInforByIp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___kt1__getInforByIp(struct soap*, const char*, int, const struct __kt1__getInforByIp *, const char*);
SOAP_FMAC3 struct __kt1__getInforByIp * SOAP_FMAC4 soap_in___kt1__getInforByIp(struct soap*, const char*, struct __kt1__getInforByIp *, const char*);

#ifndef soap_write___kt1__getInforByIp
#define soap_write___kt1__getInforByIp(soap, data) ( soap_begin_send(soap) || (soap_serialize___kt1__getInforByIp(soap, data), 0) || soap_put___kt1__getInforByIp(soap, data, "-kt1:getInforByIp", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___kt1__getInforByIp(struct soap*, const struct __kt1__getInforByIp *, const char*, const char*);

#ifndef soap_read___kt1__getInforByIp
#define soap_read___kt1__getInforByIp(soap, data) ( soap_begin_recv(soap) || !soap_get___kt1__getInforByIp(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __kt1__getInforByIp * SOAP_FMAC4 soap_get___kt1__getInforByIp(struct soap*, struct __kt1__getInforByIp *, const char*, const char*);

#define soap_new___kt1__getInforByIp(soap, n) soap_instantiate___kt1__getInforByIp(soap, n, NULL, NULL, NULL)


#define soap_delete___kt1__getInforByIp(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __kt1__getInforByIp * SOAP_FMAC2 soap_instantiate___kt1__getInforByIp(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___kt1__getInforByIp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___kt1__Query
#define SOAP_TYPE___kt1__Query (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___kt1__Query(struct soap*, struct __kt1__Query *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___kt1__Query(struct soap*, const struct __kt1__Query *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___kt1__Query(struct soap*, const char*, int, const struct __kt1__Query *, const char*);
SOAP_FMAC3 struct __kt1__Query * SOAP_FMAC4 soap_in___kt1__Query(struct soap*, const char*, struct __kt1__Query *, const char*);

#ifndef soap_write___kt1__Query
#define soap_write___kt1__Query(soap, data) ( soap_begin_send(soap) || (soap_serialize___kt1__Query(soap, data), 0) || soap_put___kt1__Query(soap, data, "-kt1:Query", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___kt1__Query(struct soap*, const struct __kt1__Query *, const char*, const char*);

#ifndef soap_read___kt1__Query
#define soap_read___kt1__Query(soap, data) ( soap_begin_recv(soap) || !soap_get___kt1__Query(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __kt1__Query * SOAP_FMAC4 soap_get___kt1__Query(struct soap*, struct __kt1__Query *, const char*, const char*);

#define soap_new___kt1__Query(soap, n) soap_instantiate___kt1__Query(soap, n, NULL, NULL, NULL)


#define soap_delete___kt1__Query(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __kt1__Query * SOAP_FMAC2 soap_instantiate___kt1__Query(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___kt1__Query(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___kt1__Insert
#define SOAP_TYPE___kt1__Insert (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___kt1__Insert(struct soap*, struct __kt1__Insert *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___kt1__Insert(struct soap*, const struct __kt1__Insert *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___kt1__Insert(struct soap*, const char*, int, const struct __kt1__Insert *, const char*);
SOAP_FMAC3 struct __kt1__Insert * SOAP_FMAC4 soap_in___kt1__Insert(struct soap*, const char*, struct __kt1__Insert *, const char*);

#ifndef soap_write___kt1__Insert
#define soap_write___kt1__Insert(soap, data) ( soap_begin_send(soap) || (soap_serialize___kt1__Insert(soap, data), 0) || soap_put___kt1__Insert(soap, data, "-kt1:Insert", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___kt1__Insert(struct soap*, const struct __kt1__Insert *, const char*, const char*);

#ifndef soap_read___kt1__Insert
#define soap_read___kt1__Insert(soap, data) ( soap_begin_recv(soap) || !soap_get___kt1__Insert(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __kt1__Insert * SOAP_FMAC4 soap_get___kt1__Insert(struct soap*, struct __kt1__Insert *, const char*, const char*);

#define soap_new___kt1__Insert(soap, n) soap_instantiate___kt1__Insert(soap, n, NULL, NULL, NULL)


#define soap_delete___kt1__Insert(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __kt1__Insert * SOAP_FMAC2 soap_instantiate___kt1__Insert(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___kt1__Insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_kt1__getInforByIpResponse
#define SOAP_TYPE_PointerTo_kt1__getInforByIpResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_kt1__getInforByIpResponse(struct soap*, _kt1__getInforByIpResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_kt1__getInforByIpResponse(struct soap*, const char *, int, _kt1__getInforByIpResponse *const*, const char *);
SOAP_FMAC3 _kt1__getInforByIpResponse ** SOAP_FMAC4 soap_in_PointerTo_kt1__getInforByIpResponse(struct soap*, const char*, _kt1__getInforByIpResponse **, const char*);

#ifndef soap_write_PointerTo_kt1__getInforByIpResponse
#define soap_write_PointerTo_kt1__getInforByIpResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_kt1__getInforByIpResponse(soap, data), 0) || soap_put_PointerTo_kt1__getInforByIpResponse(soap, data, "kt1:getInforByIpResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_kt1__getInforByIpResponse(struct soap*, _kt1__getInforByIpResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_kt1__getInforByIpResponse
#define soap_read_PointerTo_kt1__getInforByIpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_kt1__getInforByIpResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__getInforByIpResponse ** SOAP_FMAC4 soap_get_PointerTo_kt1__getInforByIpResponse(struct soap*, _kt1__getInforByIpResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_kt1__getInforByIp
#define SOAP_TYPE_PointerTo_kt1__getInforByIp (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_kt1__getInforByIp(struct soap*, _kt1__getInforByIp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_kt1__getInforByIp(struct soap*, const char *, int, _kt1__getInforByIp *const*, const char *);
SOAP_FMAC3 _kt1__getInforByIp ** SOAP_FMAC4 soap_in_PointerTo_kt1__getInforByIp(struct soap*, const char*, _kt1__getInforByIp **, const char*);

#ifndef soap_write_PointerTo_kt1__getInforByIp
#define soap_write_PointerTo_kt1__getInforByIp(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_kt1__getInforByIp(soap, data), 0) || soap_put_PointerTo_kt1__getInforByIp(soap, data, "kt1:getInforByIp", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_kt1__getInforByIp(struct soap*, _kt1__getInforByIp *const*, const char*, const char*);

#ifndef soap_read_PointerTo_kt1__getInforByIp
#define soap_read_PointerTo_kt1__getInforByIp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_kt1__getInforByIp(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__getInforByIp ** SOAP_FMAC4 soap_get_PointerTo_kt1__getInforByIp(struct soap*, _kt1__getInforByIp **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_kt1__QueryResponse
#define SOAP_TYPE_PointerTo_kt1__QueryResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_kt1__QueryResponse(struct soap*, _kt1__QueryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_kt1__QueryResponse(struct soap*, const char *, int, _kt1__QueryResponse *const*, const char *);
SOAP_FMAC3 _kt1__QueryResponse ** SOAP_FMAC4 soap_in_PointerTo_kt1__QueryResponse(struct soap*, const char*, _kt1__QueryResponse **, const char*);

#ifndef soap_write_PointerTo_kt1__QueryResponse
#define soap_write_PointerTo_kt1__QueryResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_kt1__QueryResponse(soap, data), 0) || soap_put_PointerTo_kt1__QueryResponse(soap, data, "kt1:QueryResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_kt1__QueryResponse(struct soap*, _kt1__QueryResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_kt1__QueryResponse
#define soap_read_PointerTo_kt1__QueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_kt1__QueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__QueryResponse ** SOAP_FMAC4 soap_get_PointerTo_kt1__QueryResponse(struct soap*, _kt1__QueryResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_kt1__Query
#define SOAP_TYPE_PointerTo_kt1__Query (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_kt1__Query(struct soap*, _kt1__Query *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_kt1__Query(struct soap*, const char *, int, _kt1__Query *const*, const char *);
SOAP_FMAC3 _kt1__Query ** SOAP_FMAC4 soap_in_PointerTo_kt1__Query(struct soap*, const char*, _kt1__Query **, const char*);

#ifndef soap_write_PointerTo_kt1__Query
#define soap_write_PointerTo_kt1__Query(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_kt1__Query(soap, data), 0) || soap_put_PointerTo_kt1__Query(soap, data, "kt1:Query", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_kt1__Query(struct soap*, _kt1__Query *const*, const char*, const char*);

#ifndef soap_read_PointerTo_kt1__Query
#define soap_read_PointerTo_kt1__Query(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_kt1__Query(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__Query ** SOAP_FMAC4 soap_get_PointerTo_kt1__Query(struct soap*, _kt1__Query **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_kt1__InsertResponse
#define SOAP_TYPE_PointerTo_kt1__InsertResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_kt1__InsertResponse(struct soap*, _kt1__InsertResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_kt1__InsertResponse(struct soap*, const char *, int, _kt1__InsertResponse *const*, const char *);
SOAP_FMAC3 _kt1__InsertResponse ** SOAP_FMAC4 soap_in_PointerTo_kt1__InsertResponse(struct soap*, const char*, _kt1__InsertResponse **, const char*);

#ifndef soap_write_PointerTo_kt1__InsertResponse
#define soap_write_PointerTo_kt1__InsertResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_kt1__InsertResponse(soap, data), 0) || soap_put_PointerTo_kt1__InsertResponse(soap, data, "kt1:InsertResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_kt1__InsertResponse(struct soap*, _kt1__InsertResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_kt1__InsertResponse
#define soap_read_PointerTo_kt1__InsertResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_kt1__InsertResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__InsertResponse ** SOAP_FMAC4 soap_get_PointerTo_kt1__InsertResponse(struct soap*, _kt1__InsertResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_kt1__Insert
#define SOAP_TYPE_PointerTo_kt1__Insert (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_kt1__Insert(struct soap*, _kt1__Insert *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_kt1__Insert(struct soap*, const char *, int, _kt1__Insert *const*, const char *);
SOAP_FMAC3 _kt1__Insert ** SOAP_FMAC4 soap_in_PointerTo_kt1__Insert(struct soap*, const char*, _kt1__Insert **, const char*);

#ifndef soap_write_PointerTo_kt1__Insert
#define soap_write_PointerTo_kt1__Insert(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_kt1__Insert(soap, data), 0) || soap_put_PointerTo_kt1__Insert(soap, data, "kt1:Insert", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_kt1__Insert(struct soap*, _kt1__Insert *const*, const char*, const char*);

#ifndef soap_read_PointerTo_kt1__Insert
#define soap_read_PointerTo_kt1__Insert(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_kt1__Insert(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _kt1__Insert ** SOAP_FMAC4 soap_get_PointerTo_kt1__Insert(struct soap*, _kt1__Insert **, const char*, const char*);

#ifndef SOAP_TYPE_wstring
#define SOAP_TYPE_wstring (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstring(struct soap*, wchar_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstring(struct soap*, const char*, int, wchar_t*const*, const char*);
SOAP_FMAC3 wchar_t * * SOAP_FMAC4 soap_in_wstring(struct soap*, const char*, wchar_t **, const char*);

#ifndef soap_write_wstring
#define soap_write_wstring(soap, data) ( soap_begin_send(soap) || (soap_serialize_wstring(soap, data), 0) || soap_put_wstring(soap, data, "wchar", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstring(struct soap*, wchar_t *const*, const char*, const char*);

#ifndef soap_read_wstring
#define soap_read_wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_wstring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wchar_t ** SOAP_FMAC4 soap_get_wstring(struct soap*, wchar_t **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTokt1__ArrayOfString
#define SOAP_TYPE_PointerTokt1__ArrayOfString (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTokt1__ArrayOfString(struct soap*, kt1__ArrayOfString *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTokt1__ArrayOfString(struct soap*, const char *, int, kt1__ArrayOfString *const*, const char *);
SOAP_FMAC3 kt1__ArrayOfString ** SOAP_FMAC4 soap_in_PointerTokt1__ArrayOfString(struct soap*, const char*, kt1__ArrayOfString **, const char*);

#ifndef soap_write_PointerTokt1__ArrayOfString
#define soap_write_PointerTokt1__ArrayOfString(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTokt1__ArrayOfString(soap, data), 0) || soap_put_PointerTokt1__ArrayOfString(soap, data, "kt1:ArrayOfString", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTokt1__ArrayOfString(struct soap*, kt1__ArrayOfString *const*, const char*, const char*);

#ifndef soap_read_PointerTokt1__ArrayOfString
#define soap_read_PointerTokt1__ArrayOfString(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTokt1__ArrayOfString(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 kt1__ArrayOfString ** SOAP_FMAC4 soap_get_PointerTokt1__ArrayOfString(struct soap*, kt1__ArrayOfString **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfstd__wstring
#define SOAP_TYPE_std__vectorTemplateOfstd__wstring (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__wstring(struct soap*, std::vector<std::wstring >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__wstring(struct soap*, const std::vector<std::wstring >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__wstring(struct soap*, const char*, int, const std::vector<std::wstring >*, const char*);
SOAP_FMAC3 std::vector<std::wstring >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__wstring(struct soap*, const char*, std::vector<std::wstring >*, const char*);

#define soap_new_std__vectorTemplateOfstd__wstring(soap, n) soap_instantiate_std__vectorTemplateOfstd__wstring(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfstd__wstring(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<std::wstring > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__wstring(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
